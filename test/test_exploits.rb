#!/usr/bin/env ruby

require 'sandbox'
require 'test/unit'

class TestExploits < Test::Unit::TestCase
if RUBY_VERSION >= "1.8.5"
  def setup
    @s = Sandbox.safe
  end

  def eval str
    @s.eval str
  end

  def test_safe_return
    k = eval("Kernel")
    def k.crack
      open("/etc/passwd")
    end
    assert Kernel.respond_to?(:crack)
    assert ! eval("Kernel.respond_to?(:crack)")
  end

  def test_safe_eval
    assert ! eval("eval('Kernel').respond_to?(:fork)")
    assert ! eval("eval('Object.const_defined? :TOPLEVEL_BINDING')")
  end

  def test_safe_globals
    assert_equal "(sandbox)", eval("$0")
    /(.)(.)(.)/.match("abc")
    assert_equal "TEST", eval("$TEST = 'TEST'; $TEST")
    assert_equal "e", eval("/(.)(.)(.)/.match('def'); $2")
    assert_equal "b", $2
    assert_equal "TEST", eval("$TEST")
    assert_equal "e", eval("$2")
    /(.)(.)(.)/.match("ghi")
  end

  def test_fork
    assert_raise Sandbox::Exception do
      eval("Kernel.fork")
    end
    assert_equal :fork, eval("begin; Kernel.fork; rescue NameError; :fork; end"),
      "DANGEROUS EXPLOIT: Kernel#fork available in the sandbox."
    assert_equal :fork, eval("begin; fork; rescue NameError; :fork; end"),
      "DANGEROUS EXPLOIT: Kernel#fork available in the sandbox."
  end

  def test_io
    assert_equal :NameError, eval("begin; File.open('/etc/passwd'); rescue NameError; :NameError; end"),
      "DANGEROUS EXPLOIT: Filesystem can be accessed!"
  end

  def test_globals
    assert !eval("$0.class.ancestors.last.respond_to?(:p)"),
      "DANGEROUS EXPLOIT: Kernel can be reached through the globals."
  end
  
  def test_block_scope
    1.times do |i|
      assert [], eval("local_variables")
    end
  end

  def test_matchdata_and_friends
    assert_equal :NameError, 
      eval("begin; /(.+)/.match('FreakyFreaky').instance_eval { open('/etc/passwd') }; rescue NameError; :NameError; end"),
        "DANGEROUS EXPLOIT: MatchData references Kernel."
    assert_equal :NameError, 
      eval("begin;(begin;Regexp.new('(');rescue e;e;end).instance_eval{ open('/etc/passwd') }; rescue NameError; :NameError; end"),
        "DANGEROUS EXPLOIT: RegexpError references Kernel."
  end

  def test_stack_level
    assert ! eval("begin; p = proc { |x| p[x] }; p[1]; ensure; return global_variables.include?('$!'); end")
  end
  # def test_caller
  #   assert ! eval("caller[0].class.ancestors.last.respond_to?(:p)")
  # end
end

  def test_ruby_version
    assert_equal RUBY_VERSION >= "1.8.5", Sandbox.respond_to?(:safe)
  end
end
